input {
  beats {
    port => 5044
  }
}

filter {
  if [fields][log_type] == "app-json" {
    # normalize log.level to ECS
    if ![log] { mutate { add_field => { "[log][level]" => "%{[level]}" } } }
    mutate {
      add_field => { "[event][dataset]" => "app" }
      rename => { "service" => "[service][name]" }
      remove_field => ["host","agent","ecs","input","@version"]
    }
  } else if [fields][log_type] == "nginx" {
    grok {
      match => {
        "message" => [
          "%{IPORHOST:client.ip} - %{DATA:user.name} \[%{HTTPDATE:@timestamp}\] \"%{WORD:http.request.method} %{DATA:url.original} HTTP/%{NUMBER:http.version}\" %{INT:http.response.status_code:int} (?:%{INT:http.response.body.bytes:int}|-) \"%{DATA:http.request.referrer}\" \"%{DATA:user_agent.original}\""
        ]
      }
      tag_on_failure => ["_grok_nginx_fail"]
    }
    mutate {
      add_field => { "[event][dataset]" => "nginx" }
    }
  }
}

output {
  if [fields][log_type] == "app-json" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logs-app-%{+YYYY.MM.dd}"
    }
  } else if [fields][log_type] == "nginx" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logs-nginx-%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "logs-other-%{+YYYY.MM.dd}"
    }
  }
  stdout { codec => rubydebug }
}
