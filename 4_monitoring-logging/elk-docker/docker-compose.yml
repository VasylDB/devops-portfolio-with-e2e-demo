version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 30

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_REPORTING_KIBANASERVERLESS=false
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.3
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"  # beats input
    depends_on:
      elasticsearch:
        condition: service_healthy

  # JSON app logs generator (writes to /logs/app/*.json)
  app-json-writer:
    image: busybox:1.36
    command: ["/bin/sh","-c","i=0; mkdir -p /logs/app; while true; do \
echo \"{\\\"@timestamp\\\":\\\"$(date -Iseconds)\\\",\\\"level\\\":\\\"$([ $((RANDOM%5)) -eq 0 ] && echo error || echo info)\\\",\\\"service\\\":\\\"orders-api\\\",\\\"env\\\":\\\"dev\\\",\\\"message\\\":\\\"order processed $i\\\"}\" >> /logs/app/app.json; \
i=$((i+1)); sleep 1; done"]
    volumes: [ "samplelogs:/logs" ]

  # Nginx server writing access logs at /var/log/nginx/access.log
  nginx:
    image: nginx:1.25-alpine
    volumes:
      - samplelogs:/var/log
    ports:
      - "8088:80"

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.14.3
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - samplelogs:/logs
      - type: bind
        source: ./nginx-logs
        target: /var/log/nginx
    depends_on:
      logstash:
        condition: service_started

volumes:
  samplelogs: {}
